
import tensorflow as tf
from tensorflow.keras import layers, models
import pandas as pd
import matplotlib.pyplot as plt
train = pd.read_csv("/content/train.csv")
test = pd.read_csv("/content/test.csv")

x_train = train.drop(columns=["label"]).values
y_train = train["label"]

# Reshape x_train to (num_samples, 28, 28, 1)
x_train = x_train.reshape(-1, 28, 28, 1)
# Ensure x_train is of type float32
x_train = x_train.astype('float32')

model = models.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax')
])
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])
y_train = tf.keras.utils.to_categorical(y_train, num_classes=10)
history = model.fit(x_train, y_train, epochs=5)

submission = pd.DataFrame({
    'Id': pd.read_csv("/content/test.csv")['Id'],
    'Label': predictions.argmax(axis=1)
})
submission.to_csv('submission.csv', index=False)
